(4606+1699)/3
31390707 / 2
35607293 - 31390707
13319749 + 3150201
13319749 + 3150201 + 346347
5420+2000+1800+53363
50000+23055-8409-2063
A = rbind(c(0,0,0,0,55,78), c(19,0,21,3,81), c(0,48,50,1,0), c(0,0,33,0,67), c(95,0,0,0,31))
A = rbind(c(0,0,0,55,78), c(19,0,21,3,81), c(0,48,50,1,0), c(0,0,33,0,67), c(95,0,0,0,31))
A
B = rbinf(c(0,73,0,0,42), c(0,0,82,0,0), c(83,13,0,57,0), c(48,85,18,24,0), c(98,7,0,0,3))
B = rbind(c(0,73,0,0,42), c(0,0,82,0,0), c(83,13,0,57,0), c(48,85,18,24,0), c(98,7,0,0,3))
B
A * B
42*78
A %*% B
A
B
A[3,]
B[3,]
A[3,] %*% B[4,]
50*57 + 24
sum(A[3,] * B[4,])
sum(A[3,] * B[,4])
A[3,] %*% B[,4]
A
B
A %*% B
900/360
624*8.7
624*8.7 - 4500
0.44*0.01*39500
0.44*0.01*39500*30
754*8,7
754*8.7
754*8.7 - 450
2*1166
60/1.034
60/1.06
0.06*56.6
150/1.06
0.06*141.5094
0.12*39500
0.12*39500*1.5
105874108/4
12874856/4
12874856 / 105874108
8566340 / 4
3622260 / 2
5630336/4
1407584 +  1811130
10500-364-218
10500-364-218-2000
8*22*400
gamma(2)
gamma(3)
a = 6
b= 5
gamma(a+b)
gamma(a)*gamma(b)
b=2
a=1
gamma(a)*gamma(b)
gamma(a+b)
75*24*365
75*24*365*4 + 10000000 + 4*50000*12*0.5
4*50000*12*0.5
75*24*365*4 + 10000000 + 4*50000*12*0.5
(75*24*365*4 + 10000000 + 4*50000*12*0.5)/4
(75*24*365*4 + 10000000 + 4*50000*12*0.5)/4/365/24
(75*24*365*4 + 10000000 + 4*50000*12*0.5)/4/365/24/3328
1200*(75*24*365*4 + 10000000 + 4*50000*12*0.5)/4/365/24/3328
34061207-34057793
?all
all(1:10==FALSE)
all(1:10==NULL)
1:10==NULL
logical(0)
all(logical(0))
3*43+3*30
3*43+3*30+3.15*34
3*43+3*30+6*14+3.15*34
3*43+3*30+6*14
3*43+3*30+6*14+3.15*34
3*43+3*30+6*14+40
3*43+3*30+6*14+3.15*34+40
360*1.25
76.5*9
source("http://bioconductor.org/biocLite.R")
biocLite("quantsmooth")
library(GenomeGraphs)
biocLite("GenomeGraphs")
library(GenomeGraphs)
library(biomaRt)
mart <- useMart("ensembl", dataset = "hsapiens_gene_ensembl")#
minbase <- 180292097#
maxbase <- 180492096
genesplus <- makeGeneRegion(start = minbase,#
end = maxbase, strand = "+", chromosome = "3",#
biomart = mart)
genesmin <- makeGeneRegion(start = minbase,#
end = maxbase, strand = "-", chromosome = "3",#
biomart = mart)#
seg <- makeSegmentation(segStart, segEnd,#
segments, dp = DisplayPars(color = "black",#
lwd = 2, lty = "solid"))
?makeGenericArray
ideo <- makeIdeogram(chromosome=11)
gdplot(list(a=ideo))
gdPlot(list(a=ideo))
gdPlot(list(a=ideo),minBase=0,maxBase=120000000)
minbase <- 13517534 #
maxbase <- 69458602#
#
ideo <- makeIdeogram(chromosome=11)
gdPlot(list(a=ideo),minBase=minbase,maxBase=maxbase)
gdPlot(list(a=ideo,b=makeGenomeAxis(add53=TRUE,add35=TRUE)),minBase=minbase,maxBase=maxbase)
?makeGeneRegion
genesplus <- makeGeneRegion(start = minbase,#
end = maxbase, strand = "+", chromosome = "3",#
biomart = mart)
genesmin <- makeGeneRegion(start = minbase,#
end = maxbase, strand = "-", chromosome = "3",#
biomart = mart)
gdPlot(list(a=ideo,b=makeGenomeAxis(add53=TRUE,add35=TRUE),c=genesplus),minBase=minbase,maxBase=maxbase)
```
Try clustering with bootstrapping (pvclust) on gut samples.
568/700
568/780
282/440
63+131+240+532+131+287+298
198+190+85
198+190+85+429
782+1474
198+190
429+85
3185+2548+650+3251
191+153+39+195
9634*0.06
271*1.25
248*1.25
50000-10472-17790+37701+1918
52000*12
790000/12
71/47
2194/1877
1/(2194/1877)
224+114+168+209+40+65+332+215
11000-319-218-1367
?kruskal.test
539288
539288/4
4500 * 0.2897
4500 * 0.06
4500 + 270 + 1304 + 89
10500 - (89+94+58+83+466) - 317
10500 - (89+94+58+83+466) - 317 + 1100
10500 - (89+94+58+83+466) - 317 -218 + 1100
486*2 + 486*2.5*0.5
setwd("/Volumes/Time Machine Backups/MOOC")
source("http://bioconductor.org/biocLite.R")
biocLite('DESeq2')
biocLite('SRAdb')
s
samples
labels <- c("C02","C03","C06","C08","C09","C11","C13","C15","C19","C23","N02","N03","N06","N08","N09","N11","N13","N15","N19","N23")
samples <- c("SRR057629","SRR057630","SRR057632","SRR057634","SRR057635","SRR057636","SRR057637","SRR057638","SRR057641","SRR057642")
samples
labels
for (s in samples){
r1 = paste(s,"1.fastq.gz",sep="_")
r2 = paste(s,"2.fastq.gz",sep="_")
system(paste("gunzip", r1))
system(paste("gunzip", r2))
align(index="./my_index",readfile1=paste(s,"1.fastq",sep="_"),readfile2=paste(s,"2.fastq",sep="_"),output_file=paste(s,"sam",sep="."),nthreads=3,unique=TRUE)
}
library(Rsubread)
for (s in samples){
r1 = paste(s,"1.fastq.gz",sep="_")
r2 = paste(s,"2.fastq.gz",sep="_")
system(paste("gunzip", r1))
system(paste("gunzip", r2))
align(index="./my_index",readfile1=paste(s,"1.fastq",sep="_"),readfile2=paste(s,"2.fastq",sep="_"),output_file=paste(s,"sam",sep="."),nthreads=3,unique=TRUE)
}
ind <- rbind(c(2,4,6),c(56,57,58))
ind
afr <- rbind(c(0,0,3),c(40,30,20))
afr
pvals = apply(m, 1, function(r) t.test(ind,afr)$p.value)
t.test(ind[1,],afr[1,])
t.test(ind[1,],afr[1,])$p
t.test(ind[1,],afr[1,])$p.value
source("http://bioconductor.org/biocLite.R")
biocLite('DESeq2')
82+232+61+53+71+52+68
10500+500-619-343
10*1500*0.5
setwd("~/Desktop/allt/PublicDataProject/tissuernaseq")
source('~/.active-rstudio-document', echo=TRUE)
head(pca)
rot <- pca$r
x <- pca$x
x
dim(x)
plot(pca)
summary(pca)
dim(rot)
screeplot(pca,type=c("lines"))
sampleinfo <- read.table("sample_info_published.txt",header=TRUE)
sampleinfo
?prcomp
pca$x
plot(pca$x)
par(mfrow=c(1,1))
plot(pca$x)
text(pca$x[,1],pca$x[,2])
text(pca$x[,1],pca$x[,2],labels=rownames(pca$x))
patientsample_NRaw<-cbind(as.character(sampleinfo$Study_labels),
as.numeric(sampleinfo$NumberRaw),
as.character(sampleinfo$Tissue),
as.character(sampleinfo$Preparation),
as.character(sampleinfo$readlength),
as.numeric(sampleinfo$Numbermapped),
as.character(sampleinfo$Readtype))
samplenames <- patientsample_NRaw[,-1]
samplenames
rownames(samplenames) <- patientsample_NRaw[,1]
samplenames
pca_comps<-x[,0:7]
pca_comps
x
samplenames
sampleinfo <- read.table("sample_info_published.txt",header=TRUE)
patientsample_NRaw<-cbind(as.character(sampleinfo$Study_labels),
as.numeric(sampleinfo$NumberRaw),
as.character(sampleinfo$Tissue),
as.character(sampleinfo$Preparation),
as.character(sampleinfo$readlength),
as.numeric(sampleinfo$Numbermapped),
as.character(sampleinfo$Readtype))
samplenames <- patientsample_NRaw[,-1]
rownames(samplenames) <- patientsample_NRaw[,1]
pca_comps<-x[,0:7]
Nraw_pca.comp_na <- as.matrix(merge(samplenames,pca_comps,by="row.names",all=TRUE))
Nraw_pca.comp_na
x
sampleinfo <- read.table("sample_info_published.txt",header=TRUE)
patientsample_NRaw<-cbind(as.character(sampleinfo$Study_labels),
as.numeric(sampleinfo$NumberRaw),
as.character(sampleinfo$Tissue),
as.character(sampleinfo$Preparation),
as.character(sampleinfo$readlength),
as.numeric(sampleinfo$Numbermapped),
as.character(sampleinfo$Readtype))
samplenames <- patientsample_NRaw[,-1]
rownames(samplenames) <- patientsample_NRaw[,1]
pca_comps<-x[,0:7]
Nraw_pca.comp_na <- as.matrix(merge(samplenames,pca_comps,by="row.names",all=TRUE))
Nraw_pca.comp_na
Nraw_pca.comp<-na.omit(data.frame(Nraw_pca.comp_na))
Nraw_pca.comp == Nraw_pca.comp_na
plot(as.numeric(Nraw_pca.comp[,8]),Nraw_pca.comp[,2],xlab="NRaw",ylab="PCA_C1")
Nraw_pca.comp
Nraw_pca.comp[,2]
Nraw_pca.comp[,8]
as.numeric(Nraw_pca.comp[,8])
plot(Nraw_pca.comp[,8], Nraw_pca.comp[,2])
cor(Nraw_pca.comp[,8], Nraw_pca.comp[,2])
mean(Nraw_pca.comp)
Nraw_pca.comp
Nraw_pca.comp[,8]
as.character(Nraw_pca.comp[,8])
as.numeric(as.character(Nraw_pca.comp[,8]))
plot(as.numeric(as.character(Nraw_pca.comp[,8])),Nraw_pca.comp[,2],xlab="NRaw",ylab="PCA_C1")
Nraw_pca.comp[,2]
plot(as.numeric(Nraw_pca.comp[,8]),Nraw_pca.comp[,2],xlab="NRaw",ylab="PCA_C1")
Nraw_pca.comp[,2]
x
cor(x[,1])
cor(x[,1],Nraw_pca.comp)
cor(x[,1],Nraw_pca.comp[,2])
sampleinfo
cor(x[,1], sampleinfo$NumberRaw)
cor(x[,1], sampleinfo$NumberRaw, method="spearman")
cor(x[,1], sampleinfo$NumberMapped, method="spearman")
cor(x[,1], sampleinfo$Numbermapped, method="spearman")
cor(x[,1], sampleinfo$Numbermapped, method="pearson")
cor.test(x[,1], sampleinfo$NumberRaw, method="spearman")
cor.test(x[,1], sampleinfo$Numbermapped, method="spearman")
