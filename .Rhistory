maxval = 3200
barplot(a$"F value"[-5],names.arg=rownames(a)[-5],main="Anova F score, Raw RPKM",ylim=c(0,maxval))
maxval = 3000
barplot(a$"F value"[-5],names.arg=rownames(a)[-5],main="Anova F score, Raw RPKM",ylim=c(0,maxval))
colors <- c(1,2,3,1,2,1,2,3,1,2,3)
plotPC(f.nozero, 1, 2, "Published FPKM values \n SVD \n n=13333", colors=colors)
plotPC(f.nozero, 2, 3, "Published FPKM values \n SVD \n n=13333", colors=colors)
colors <- c(1,2,3,1,2,1,2,3,1,2,3)
par(mfrow=c(4,4))
for (i in 1:6){
for(j in 1:6){
if (i<j){
plotPC(f.nozero,i,j,desc="",colors=colors)
}
}
}
pseudo <- 1
fpkms.log <- log2(f.nozero + pseudo)
plotPC(fpkms.log, 1, 2, desc="Published FPKM values, log2 \n SVD \n n=13333", colors=colors)
plotPC(fpkms.log, 1, 2, desc="Published FPKM values, log2 \n SVD \n n=13333", colors=colors)
plotPC(fpkms.log, 2, 3, desc="Published FPKM values, log2 \n SVD \n n=13333", colors=colors)
colors <- c(1,2,3,1,2,1,2,3,1,2,3)
p <- prcomp(t(fpkms.log))
par(mfrow=c(4,4))
for (i in 1:6){
for(j in 1:6){
if (i<j){
plot(p$x[,i],p$x[,j],pch=20,col=colors,xlab=paste("PC", i),ylab=paste("PC", j))
}
}
}
library(VennDiagram)
HPA_b <- rownames(f[order(f$HPA_brain,decreasing=T),][1:100,])
HPA_h <- rownames(f[order(f$HPA_heart,decreasing=T),][1:100,])
HPA_k <- rownames(f[order(f$HPA_kidney,decreasing=T),][1:100,])
AltIso_b <- rownames(f[order(f$AltIso_brain,decreasing=T),][1:100,])
AltIso_h <- rownames(f[order(f$AltIso_heart,decreasing=T),][1:100,])
GTEx_b <- rownames(f[order(f$GTEx_brain,decreasing=T),][1:100,])
GTEx_h <- rownames(f[order(f$GTEx_heart,decreasing=T),][1:100,])
GTEx_k <- rownames(f[order(f$GTEx_kidney,decreasing=T),][1:100,])
Atlas_b <- rownames(f[order(f$Atlas_brain,decreasing=T),][1:100,])
Atlas_h <- rownames(f[order(f$Atlas_heart,decreasing=T),][1:100,])
Atlas_k <- rownames(f[order(f$Atlas_kidney,decreasing=T),][1:100,])
```
Let's start with the four brain samples:
```{r:venn brain}
draw.quad.venn(100, 100, 100, 100,
length(intersect(HPA_b,AltIso_b)),
length(intersect(HPA_b,GTEx_b)),
length(intersect(HPA_b,Atlas_b)),
length(intersect(AltIso_b,GTEx_b)),
length(intersect(AltIso_b,Atlas_b)),
length(intersect(GTEx_b,Atlas_b)),
length(intersect(intersect(HPA_b,AltIso_b),GTEx_b)),
length(intersect(intersect(HPA_b,AltIso_b),Atlas_b)),
length(intersect(intersect(HPA_b,GTEx_b),Atlas_b)),
length(intersect(intersect(AltIso_b,GTEx_b),Atlas_b)),
length(intersect(intersect(HPA_b,AltIso_b),intersect(Atlas_b,GTEx_b))),
category = c("HPA","AltIso","GTEx","Atlas"), lwd = rep(0, 4), lty = rep("solid", 4),
fill = c("mistyrose","steelblue","lightgoldenrod","darkseagreen")
)
sjdh
ds
d
d
d
d
?h
s
```{r:venn brain}
library(pheatmap)
library(gplots)
library(ops)
library(calibrate)
do.SVD = function(m, comp.1=1, comp.2=2){ # returns eig.cell
s <- svd(m)
ev <- s$d^2 / sum(s$d^2)
return(s$u[,c(comp.1, comp.2)])
}
project.SVD <- function(m, eig.cell){
return(t(m) %*% eig.cell)
}
plot.SVD <- function(m, comp.1=1, comp.2=2, groups=rep("blue", ncol(m)), title=""){
eig <- do.SVD(m, comp.1, comp.2)
proj <- project.SVD(m, eig)
xminv <- min(proj[,1]) # - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) # + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) # - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) # + .2 * abs(max(proj[,2]))
plot(proj,pch=20,col="white",xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab="PC1",ylab="PC2",main=title)
points(proj, col=as.character(groups),pch=20) # , #pch=c(rep(15,3),rep(17,3),rep(19,3),rep(18,3),rep(20,2)), cex=2)
textxy(proj[,1],proj[,2],labs=colnames(m))
}
loadings.SVD <- function(m, comp=1, gene.ids = rownames(m)){
s <- svd(m)
l <- s$u[,comp]
names(l) <- gene.ids
l.s <- l[order(l)]
return(l.s)
}
plot.loadings.SVD <- function(m, comp=1, cutoff=0.1, gene.ids = rownames(m)){
l <- loadings.SVD(m, comp, gene.ids)
barplot(l[abs(l)>cutoff],las=2,main=paste("PC", comp, "cutoff", cutoff),cex.names=0.6)
}
plotPC <- function(matrix,a,b,desc,colors){
eig <- do.SVD(matrix, a, b)
proj <- project.SVD(matrix, eig)
xminv <- min(proj[,1]) - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) + .2 * abs(max(proj[,2]))
plot(proj,pch=20,xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab=paste0("PC",a),ylab=paste("PC",b),col=colors,main=desc)
textxy(proj[,1],proj[,2],labs=rownames(proj))
f <- read.delim("published_rpkms.txt",sep=" ")
f.nozero <- f[-which(rowSums(f[,])==0),]
jhkjhkhf
library(pheatmap)
library(gplots)
library(ops)
library(calibrate)
do.SVD = function(m, comp.1=1, comp.2=2){ # returns eig.cell
s <- svd(m)
ev <- s$d^2 / sum(s$d^2)
return(s$u[,c(comp.1, comp.2)])
}
project.SVD <- function(m, eig.cell){
return(t(m) %*% eig.cell)
}
plot.SVD <- function(m, comp.1=1, comp.2=2, groups=rep("blue", ncol(m)), title=""){
eig <- do.SVD(m, comp.1, comp.2)
proj <- project.SVD(m, eig)
xminv <- min(proj[,1]) # - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) # + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) # - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) # + .2 * abs(max(proj[,2]))
plot(proj,pch=20,col="white",xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab="PC1",ylab="PC2",main=title)
points(proj, col=as.character(groups),pch=20) # , #pch=c(rep(15,3),rep(17,3),rep(19,3),rep(18,3),rep(20,2)), cex=2)
textxy(proj[,1],proj[,2],labs=colnames(m))
}
loadings.SVD <- function(m, comp=1, gene.ids = rownames(m)){
s <- svd(m)
l <- s$u[,comp]
names(l) <- gene.ids
l.s <- l[order(l)]
return(l.s)
}
plot.loadings.SVD <- function(m, comp=1, cutoff=0.1, gene.ids = rownames(m)){
l <- loadings.SVD(m, comp, gene.ids)
barplot(l[abs(l)>cutoff],las=2,main=paste("PC", comp, "cutoff", cutoff),cex.names=0.6)
}
plotPC <- function(matrix,a,b,desc,colors){
eig <- do.SVD(matrix, a, b)
proj <- project.SVD(matrix, eig)
xminv <- min(proj[,1]) - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) + .2 * abs(max(proj[,2]))
plot(proj,pch=20,xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab=paste0("PC",a),ylab=paste("PC",b),col=colors,main=desc)
textxy(proj[,1],proj[,2],labs=rownames(proj))
}
f <- read.delim("published_rpkms.txt",sep=" ")
f.nozero <- f[-which(rowSums(f[,])==0),]
pheatmap(cor(f.nozero, method="spearman"))
pheatmap(cor(f.nozero))
pseudo <- 1
fpkms.log <- log2(f.nozero + pseudo)
pheatmap(cor(fpkms.log))
f.nolow <- f.nozero[-which(rowMeans(f.nozero)<1),]
pheatmap(cor(log2(f.nolow+pseudo)))
library(reshape)
m <- melt(f.nozero)
colnames(m) <- c("sample_ID","RPKM")
meta <- data.frame(tissue=c("heart","brain","kidney","heart","brain","heart","brain","kidney","heart","brain","kidney"),study=c("HPA","HPA","HPA","AltIso","AltIso","GTex","GTex","GTex","Atlas","Atlas","Atlas"),prep=c(rep("poly-A",8),rep("rRNA-depl",3)),layout=c(rep("PE",3),rep("SE",2),rep("PE",3),rep("SE",3)))
rownames(meta) <- colnames(f.nozero)
tissue <- rep(meta$tissue, each=nrow(f.nozero))
study <- rep(meta$study, each=nrow(f.nozero))
prep <- rep(meta$prep, each=nrow(f.nozero))
layout <- rep(meta$layout, each=nrow(f.nozero))
data <- data.frame(m, tissue=tissue, study=study, prep=prep, layout=layout)
fit <- lm(RPKM ~ prep + layout + study + tissue, data=data)
a <- anova(fit)
maxval = 3000
barplot(a$"F value"[-5],names.arg=rownames(a)[-5],main="Anova F score, Raw RPKM",ylim=c(0,maxval))
library(VennDiagram)
HPA_b <- rownames(f[order(f$HPA_brain,decreasing=T),][1:100,])
HPA_h <- rownames(f[order(f$HPA_heart,decreasing=T),][1:100,])
HPA_k <- rownames(f[order(f$HPA_kidney,decreasing=T),][1:100,])
AltIso_b <- rownames(f[order(f$AltIso_brain,decreasing=T),][1:100,])
AltIso_h <- rownames(f[order(f$AltIso_heart,decreasing=T),][1:100,])
GTEx_b <- rownames(f[order(f$GTEx_brain,decreasing=T),][1:100,])
GTEx_h <- rownames(f[order(f$GTEx_heart,decreasing=T),][1:100,])
GTEx_k <- rownames(f[order(f$GTEx_kidney,decreasing=T),][1:100,])
Atlas_b <- rownames(f[order(f$Atlas_brain,decreasing=T),][1:100,])
Atlas_h <- rownames(f[order(f$Atlas_heart,decreasing=T),][1:100,])
Atlas_k <- rownames(f[order(f$Atlas_kidney,decreasing=T),][1:100,])
draw.quad.venn(100, 100, 100, 100,
length(intersect(HPA_b,AltIso_b)),
length(intersect(HPA_b,GTEx_b)),
length(intersect(HPA_b,Atlas_b)),
length(intersect(AltIso_b,GTEx_b)),
length(intersect(AltIso_b,Atlas_b)),
length(intersect(GTEx_b,Atlas_b)),
length(intersect(intersect(HPA_b,AltIso_b),GTEx_b)),
length(intersect(intersect(HPA_b,AltIso_b),Atlas_b)),
length(intersect(intersect(HPA_b,GTEx_b),Atlas_b)),
length(intersect(intersect(AltIso_b,GTEx_b),Atlas_b)),
length(intersect(intersect(HPA_b,AltIso_b),intersect(Atlas_b,GTEx_b))),
category = c("HPA","AltIso","GTEx","Atlas"), lwd = rep(0, 4), lty = rep("solid", 4),
fill = c("mistyrose","steelblue","lightgoldenrod","darkseagreen")
)
maxval=3000
m <- melt(fpkms.log)
colnames(m) <- c("gene_ID","sample_ID","log2RPKM")
data <- data.frame(m, tissue=tissue, study=study, prep=prep, layout=layout)
#subset <- data[sample(1:nrow(data), 1000),]
fit <- lm(log2RPKM ~ + prep + layout + study + tissue, data=data)
b <- anova(fit)
maxval=3000
barplot(b$"F value"[-5],names.arg=rownames(b)[-5],main="Anova F score, log2-RPKM",ylim=c(0,maxval))
print(b)
library(sva)
meta <- data.frame(study=c(rep("HPA",3),rep("AltIso",2),rep("GTex",3),rep("Atlas",3)),tissue=c("Heart","Brain","Kidney","Heart","Brain","Heart","Brain","Kidney","Heart","Brain","Kidney"))
batch <- meta$study
design <- model.matrix(~as.factor(tissue),data=meta)
combat <- ComBat(dat=fpkms.log,batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
pheatmap(cor(combat))
plotPC(combat,1,2,colors=colors,desc="Published F/RPKM values, ComBat adjusted log2 TMM values \n SVD \n n=13333")
plotPC(combat,2,3,colors=colors,desc="Published F/RPKM values, ComBat adjusted log2 TMM values \n SVD \n n=13333")
colors <- c(1,2,3,1,2,1,2,3,1,2,3)
plotPC(combat,1,2,colors=colors,desc="Published F/RPKM values, ComBat adjusted log2 TMM values \n SVD \n n=13333")
plotPC(combat,2,3,colors=colors,desc="Published F/RPKM values, ComBat adjusted log2 TMM values \n SVD \n n=13333")
par(mfrow=c(4,4))
for (i in 1:6){
for(j in 1:6){
if (i<j){
eig.cell <- s$u[,c(i, j)]
proj <- t(combat) %*% eig.cell
plot(proj[,1],proj[,2],pch=20,col=colors,xlab=paste("PC", i),ylab=paste("PC", j))
}
}
}
HPA_b_c <- rownames(combat[order(combat[,1],decreasing=T),][1:100,])
HPA_h_c <- rownames(combat[order(combat[,2],decreasing=T),][1:100,])
HPA_k_c <- rownames(combat[order(combat[,3],decreasing=T),][1:100,])
AltIso_b_c <- rownames(combat[order(combat[,4],decreasing=T),][1:100,])
AltIso_h_c <- rownames(combat[order(combat[,5],decreasing=T),][1:100,])
GTEx_b_c <- rownames(combat[order(combat[,6],decreasing=T),][1:100,])
GTEx_h_c <- rownames(combat[order(combat[,7],decreasing=T),][1:100,])
GTEx_k_c <- rownames(combat[order(combat[,8],decreasing=T),][1:100,])
Atlas_b_c <- rownames(combat[order(combat[,9],decreasing=T),][1:100,])
Atlas_h_c <- rownames(combat[order(combat[,10],decreasing=T),][1:100,])
Atlas_k_c <- rownames(combat[order(combat[,11],decreasing=T),][1:100,])
library(gridExtra)
r <- rectGrob(gp=gpar(fill="white",lwd=0))
top <- arrangeGrob(r, r, r, r, nrow=2)
grid.arrange(top, r, ncol=1, main = "\nBrain Combat", heights=c(2, 1))
draw.quad.venn(100, 100, 100, 100,
length(intersect(HPA_b_c,AltIso_b_c)),
length(intersect(HPA_b_c,GTEx_b_c)),
length(intersect(HPA_b_c,Atlas_b_c)),
length(intersect(AltIso_b_c,GTEx_b_c)),
length(intersect(AltIso_b_c,Atlas_b_c)),
length(intersect(GTEx_b_c,Atlas_b_c)),
length(intersect(intersect(HPA_b_c,AltIso_b_c),GTEx_b_c)),
length(intersect(intersect(HPA_b_c,AltIso_b_c),Atlas_b_c)),
length(intersect(intersect(HPA_b_c,GTEx_b_c),Atlas_b_c)),
length(intersect(intersect(AltIso_b_c,GTEx_b_c),Atlas_b_c)),
length(intersect(intersect(HPA_b_c,AltIso_b_c),intersect(Atlas_b_c,GTEx_b_c))),
category = c("HPA","AltIso","GTEx","Atlas"), lwd = rep(0, 4), lty = rep("solid", 4),
fill = c("mistyrose","steelblue","lightgoldenrod","darkseagreen")
)
m <- melt(combat)
head(combat)
m <- melt(combat)
colnames(m) <- c("sample_ID","combat")
data <- data.frame(m, tissue=tissue, study=study, prep=prep, layout=layout)
#subset <- data[sample(1:nrow(data), 1000),]
fit <- lm(combat ~ + prep + layout + study + tissue, data=data)
c <- anova(fit)
barplot(c$"F value"[-5],names.arg=rownames(b)[-5],main="Anova F score, log2-TMM-FPKM",ylim=c(0,5000))
print(c)
m <- melt(combat)
colnames(m) <- c("sample_ID","combat")
data <- data.frame(m, tissue=tissue, study=study, prep=prep, layout=layout)
fit <- lm(combat ~ + prep + layout + study + tissue, data=data)
c <- anova(fit)
barplot(c$"F value"[-5],names.arg=rownames(b)[-5],main="Anova F score, log2-TMM-FPKM",ylim=c(0,5000))
barplot(c$"F value"[-5],names.arg=rownames(b)[-5],main="Anova F score, log2-TMM-FPKM",ylim=c(0,maxval))
print(c)
barplot(c$"F value"[-5],names.arg=rownames(b)[-5],main="Anova F score, log2-TMM-FPKM",ylim=c(0,maxval))
barplot(c$"F value"[-5],names.arg=rownames(b)[-5],main="Anova F score, Combat",ylim=c(0,maxval))
library(pheatmap)
library(calibrate)
f <- read.delim("fpkm_table_tophat.txt")
do.SVD = function(m, comp.1=1, comp.2=2){ # returns eig.cell
s <- svd(m)
ev <- s$d^2 / sum(s$d^2)
return(s$u[,c(comp.1, comp.2)])
}
project.SVD <- function(m, eig.cell){
return(t(m) %*% eig.cell)
}
plot.SVD <- function(m, comp.1=1, comp.2=2, groups=rep("blue", ncol(m)), title=""){
eig <- do.SVD(m, comp.1, comp.2)
proj <- project.SVD(m, eig)
xminv <- min(proj[,1]) # - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) # + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) # - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) # + .2 * abs(max(proj[,2]))
plot(proj,pch=20,col="white",xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab="PC1",ylab="PC2",main=title)
points(proj, col=as.character(groups),pch=20) # , #pch=c(rep(15,3),rep(17,3),rep(19,3),rep(18,3),rep(20,2)), cex=2)
textxy(proj[,1],proj[,2],labs=colnames(m))
}
loadings.SVD <- function(m, comp=1, gene.ids = rownames(m)){
s <- svd(m)
l <- s$u[,comp]
names(l) <- gene.ids
l.s <- l[order(l)]
return(l.s)
}
plot.loadings.SVD <- function(m, comp=1, cutoff=0.1, gene.ids = rownames(m)){
l <- loadings.SVD(m, comp, gene.ids)
barplot(l[abs(l)>cutoff],las=2,main=paste("PC", comp, "cutoff", cutoff),cex.names=0.6)
}
plotPC <- function(matrix,a,b,desc,colors){
eig <- do.SVD(matrix, a, b)
proj <- project.SVD(matrix, eig)
xminv <- min(proj[,1]) - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) + .2 * abs(max(proj[,2]))
plot(proj,pch=20,xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab=paste0("PC",a),ylab=paste("PC",b),col=colors,main=desc)
textxy(proj[,1],proj[,2],labs=rownames(proj))
}
library(biomaRt)
f_ids <- as.vector(f[,1])
ensembl = useMart("ensembl", dataset = "hsapiens_gene_ensembl") #select the ensembl database
gene_type <- getBM(attributes=c("ensembl_gene_id", "gene_biotype"),
filters = "ensembl_gene_id",
values=f_ids,
mart=ensembl)
pc <- subset(gene_type[,1],gene_type[,2]=="protein_coding")
f_pc <- f[match(pc,f[,1]),]
pheatmap(cor(f_pc_nozero[,3:16], method="spearman"))
f_pc_nozero <- f_pc[-which(rowSums(f_pc[,3:16])<=0.01),]
f.nozero <- f[-which(rowSums(f[,])<=0.01),]
library(pheatmap)
library(calibrate)
f <- read.delim("fpkm_table_tophat.txt")
do.SVD = function(m, comp.1=1, comp.2=2){ # returns eig.cell
s <- svd(m)
ev <- s$d^2 / sum(s$d^2)
return(s$u[,c(comp.1, comp.2)])
}
project.SVD <- function(m, eig.cell){
return(t(m) %*% eig.cell)
}
plot.SVD <- function(m, comp.1=1, comp.2=2, groups=rep("blue", ncol(m)), title=""){
eig <- do.SVD(m, comp.1, comp.2)
proj <- project.SVD(m, eig)
xminv <- min(proj[,1]) # - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) # + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) # - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) # + .2 * abs(max(proj[,2]))
plot(proj,pch=20,col="white",xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab="PC1",ylab="PC2",main=title)
points(proj, col=as.character(groups),pch=20) # , #pch=c(rep(15,3),rep(17,3),rep(19,3),rep(18,3),rep(20,2)), cex=2)
textxy(proj[,1],proj[,2],labs=colnames(m))
}
loadings.SVD <- function(m, comp=1, gene.ids = rownames(m)){
s <- svd(m)
l <- s$u[,comp]
names(l) <- gene.ids
l.s <- l[order(l)]
return(l.s)
}
plot.loadings.SVD <- function(m, comp=1, cutoff=0.1, gene.ids = rownames(m)){
l <- loadings.SVD(m, comp, gene.ids)
barplot(l[abs(l)>cutoff],las=2,main=paste("PC", comp, "cutoff", cutoff),cex.names=0.6)
}
plotPC <- function(matrix,a,b,desc,colors){
eig <- do.SVD(matrix, a, b)
proj <- project.SVD(matrix, eig)
xminv <- min(proj[,1]) - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) + .2 * abs(max(proj[,2]))
plot(proj,pch=20,xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab=paste0("PC",a),ylab=paste("PC",b),col=colors,main=desc)
textxy(proj[,1],proj[,2],labs=rownames(proj))
}
library(biomaRt)
f_ids <- as.vector(f[,1])
ensembl = useMart("ensembl", dataset = "hsapiens_gene_ensembl") #select the ensembl database
gene_type <- getBM(attributes=c("ensembl_gene_id", "gene_biotype"),
filters = "ensembl_gene_id",
values=f_ids,
mart=ensembl)
pc <- subset(gene_type[,1],gene_type[,2]=="protein_coding")
f_pc <- f[match(pc,f[,1]),]
f_pc_nozero <- f_pc[-which(rowSums(f_pc[,3:16])<=0.01),]
pheatmap(cor(f_pc_nozero[,3:16], method="spearman"))
pheatmap(cor(f_pc_nozero[,3:16]))
pseudo <- 1
logs <- log2(f_pc_nozero[,3:16] + pseudo)
fpkms.log <- cbind(f_pc_nozero[,1:2],logs)
pheatmap(cor(fpkms.log[,]))
pheatmap(cor(f_pc_nozero[,3:16], method="spearman"))
pheatmap(cor(f_pc_nozero[,3:16]))
pseudo <- 1
logs <- log2(f_pc_nozero[,3:16] + pseudo)
fpkms.log <- cbind(f_pc_nozero[,1:2],logs)
f.nolow <- f_pc_nozero[-which(rowMeans(f_pc_nozero[,3:16])<1),]
pheatmap(cor(log2(f.nolow[,3:16] + pseudo)))
pheatmap(cor(fpkms.log[,]))
fpkms.log <- cbind(f_pc_nozero[,1:2],logs)
pheatmap(cor(fpkms.log[,]))
pheatmap(cor(fpkms.log[,3:16]))
f.nolow <- f_pc_nozero[-which(rowMeans(f_pc_nozero[,3:16])<1),]
pheatmap(cor(log2(f.nolow[,3:16] + pseudo)))
head(f_pc_nozero)
colors <- c(2,1,3,2,1,3,2,1,3,2,1,3,2,1)
plotPC(f_pc_nozero[,3:16], 1, 2, "Reprocessed FPKM values \n SVD \n n=19524", colors=colors)
plotPC(f_pc_nozero[,3:16], 2, 3, "Reprocessed FPKM values \n SVD \n n=19524", colors=colors)
colors <- c(2,1,3,2,1,3,2,1,3,2,1,3,2,1)
par(mfrow=c(4,4))
for (i in 1:6){
for(j in 1:6){
if (i<j){
plotPC(f_pc_nozero[,3:16],i,j,desc="",colors=colors)
}
}
}
plotPC(fpkms.log, 1, 2, desc="Reprocessed F/RPKM values, log2 \n SVD \n n=19475", colors=colors)
head(fpkms.log)
plotPC(fpkms.log[,3:16], 1, 2, desc="Reprocessed F/RPKM values, log2 \n SVD \n n=19475", colors=colors)
plotPC(fpkms.log[,3:16], 2, 3, desc="Reprocessed FPKM values, log2 \n SVD \n n=19475", colors=colors)
plotPC(fpkms.log[,3:16], 1, 2, desc="Reprocessed F/RPKM values, log2 \n SVD \n n=19475", colors=colors)
library(sva)
meta <- data.frame(study=c(rep("EoGE",3),rep("Atlas",3),rep("BodyMap",3),rep("HPA",3),rep("AltIso",2)),tissue=c("Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart"),prep=c(rep("poly-A",3),rep("rRNA-depl",3),rep("poly-A",8)),layout=c(rep("PE",3),rep("SE",3),rep("PE",6),rep("SE",2)))
batch <- meta$study
design <- model.matrix(~as.factor(tissue),data=meta)
combat <- ComBat(dat=fpkms.log[,3:16],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
pheatmap(cor(combat))
plotPC(combat,1,2,colors=colors,desc="Reprocessed F/RPKM values, ComBat on log2 values \n SVD \n n=19475")
plotPC(combat,2,3,colors=colors,desc="Reprocessed F/RPKM values, ComBat on log2 values \n SVD \n n=19475")
plotPC(combat,1,2,colors=colors,desc="Reprocessed F/RPKM values, ComBat on log2 values \n SVD \n n=19475")
pca_study_public <- read.delim("published_rpkms.txt",sep=" ")
?cor.test
sampleinfo <- read.table("sample_info_reprocessed.txt",header=TRUE)
pca_study_public <- read.delim("published_rpkms.txt",sep=" ")
fpkm_data_reprocessed <- read.delim("fpkm_table_tophat.txt")
head(fpkm_data_reprocessed)
filter <- apply(fpkm_data_reprocessed[,3:16], 1, function(row) all(row !=0 ))
fpkm_data_reprocessed_nonzero <- fpkm_data_reprocessed[filter,]
pca <- svd(pca_study_public[,3:16])
pca <- svd(fpkm_data_reprocessed_nonzero[,3:16])
var.percent <- (pca$d^2 / sum(pca$d^2) ) *100
barplot(var.percent[1:5], xlab="PC", ylab="Percent Variance",names.arg=1:length(var.percent[1:5]), las=1,ylim=c(0,max(var.percent[1:5])+10), col="gray")
rm(list = ls(all = TRUE))
library(biomaRt)
#Jordis gener
nudix_genes <- read.table("/Users/fridadanielsson/Documents/Projekt/Jordi NUDIX service project/Nudix Accession Number_Jordi.csv", header=T, sep=";")
#hämta ensembl-id
ensembl  = useMart("ensembl", dataset = "hsapiens_gene_ensembl") #select the ensembl database
gene_info <- getBM(attributes=c("entrezgene","ensembl_gene_id","description"),
filters = "entrezgene",
values=nudix_genes[,2],
mart=ensembl)
RNA_data <- read.delim("/Users/fridadanielsson/Documents/Projekt/Jordi NUDIX service project/fpkm_pc_allsamples_20140505.tsv",stringsAsFactors = FALSE)
nudix.FPKM.normal <- RNA_data[RNA_data$enstid %in% gene_info[,2],1:161]
head(nudix.FPKM.normal)
head(colnames(nudix.FPKM.normal))
class(colnames(nudix.FPKM.normal)[1])
ty <- c("col.d","jhd","khs.col")
grep("col",ty)
meanCols <- grep("MEAN",colnames(nudix.FPKM.normal))
head(nudix.FPKM.normal[meanCols])
nudix.FPKM.normal.mean <- nudix.FPKM.normal[,c(1:2,meanCols)]
head(nudix.FPKM.normal.mean)
head(nudix.FPKM.normal)
head(nudix.FPKM.normal)
nudix.FPKM.normal <- RNA_data[RNA_data$enstid %in% gene_info[,2],1:161]
meanCols.normal <- grep("MEAN",colnames(nudix.FPKM.normal))
nudix.FPKM.normal.mean <- nudix.FPKM.normal[,c(1:2,meanCols)]
nudix.FPKM.cancer <- RNA_data[RNA_data$enstid %in% gene_info[,2],c(1:2,162:248)]
meanCols.cancer <- grep("MEAN",colnames(nudix.FPKM.cancer))
nudix.FPKM.cancer.mean <- nudix.FPKM.cancer[,c(1:2,meanCols.cancer)]
nudix.FPKM.cells <- RNA_data[RNA_data$enstid %in% gene_info[,2],c(1:2,249:389)]
meanCols.cells <- grep("MEAN",colnames(nudix.FPKM.cells))
nudix.FPKM.cells.mean <- nudix.FPKM.cells[,c(1:2,meanCols.cells)]
nudix.FPKM.normal <- RNA_data[RNA_data$enstid %in% gene_info[,2],1:161]
meanCols.normal <- grep("MEAN",colnames(nudix.FPKM.normal))
nudix.FPKM.normal.mean <- nudix.FPKM.normal[,c(1:2,meanCols)]
nudix.FPKM.cancer <- RNA_data[RNA_data$enstid %in% gene_info[,2],c(1:2,162:248)]
meanCols.cancer <- grep("MEAN",colnames(nudix.FPKM.cancer))
nudix.FPKM.cancer.mean <- nudix.FPKM.cancer[,c(1:2,meanCols.cancer)]
nudix.FPKM.cells <- RNA_data[RNA_data$enstid %in% gene_info[,2],c(1:2,249:389)]
meanCols.cells <- grep("MEAN",colnames(nudix.FPKM.cells))
nudix.FPKM.cells.mean <- nudix.FPKM.cells[,c(1:2,meanCols.cells)]
write.table(nudix.FPKM.normal.mean,"/Users/fridadanielsson/Documents/Projekt/Jordi NUDIX service project/nudix_fpkm_normal_MEAN.txt",sep="\t")
write.table(nudix.FPKM.cancer.mean,"/Users/fridadanielsson/Documents/Projekt/Jordi NUDIX service project/nudix_fpkm_cancer_MEAN.txt",sep="\t")
write.table(nudix.FPKM.cells.mean,"/Users/fridadanielsson/Documents/Projekt/Jordi NUDIX service project/nudix_fpkm_cells_MEAN.txt",sep="\t")
grep("hdlm2",colnames(nudix.FPKM.normal))
grep("hdlm2",colnames(nudix.FPKM.cells))
grep("siha",colnames(nudix.FPKM.cells))
grep("time",colnames(nudix.FPKM.cells))
grep("hela",colnames(nudix.FPKM.cells))
#cellinjerna hdlm2, siha och time har bara ett prov, tar därför ut deras kolumner separat (33,94 och 107)
nudix.FPKM.cells <- RNA_data[RNA_data$enstid %in% gene_info[,2],c(1:2,249:389)]
meanCols.cells <- grep("MEAN",colnames(nudix.FPKM.cells))
nudix.FPKM.cells.mean <- nudix.FPKM.cells[,c(1:2,meanCols.cells,33,94,107)]
write.table(nudix.FPKM.cells,"/Users/fridadanielsson/Documents/Projekt/Jordi NUDIX service project/nudix_fpkm_cells.txt",sep="\t")
write.table(nudix.FPKM.cells.mean,"/Users/fridadanielsson/Documents/Projekt/Jordi NUDIX service project/nudix_fpkm_cells_MEAN.txt",sep="\t")
