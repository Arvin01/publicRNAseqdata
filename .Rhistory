gene_type <- getBM(attributes=c("ensembl_gene_id", "gene_biotype"),
filters = "ensembl_gene_id",
values=f_ids,
mart=ensembl)
head(gene_type)
pc <- subset(gene_type[,1],gene_type[,2]=="protein_coding")
f_pc <- f[match(pc,f[,1]),]
pheatmap(cor(f_pc, method="spearman"))
head(f_pc)
pheatmap(cor(f_pc[,3:16], method="spearman"))
library(pheatmap)
library(edgeR)
library(calibrate)
f <- read.delim("fpkm_table_tophat.txt")
cpm.tmm <- function(counts, groups=NA){
require(edgeR)
if(is.na(groups)){
d<-DGEList(counts=counts)
}
else{
d<-DGEList(counts=counts, group=groups)
}
d <- calcNormFactors(d, method="TMM")
return(cpm(d, normalized.lib.sizes=TRUE))
}
log2.cpm <- function(x){
x.pseud <- x + 0.5
libsizes = colSums(x)
libsize.pseud <- libsizes + 1.0
new.mtx <- log2(1e6 * mapply("/",as.data.frame(x.pseud),libsize.pseud))
rownames(new.mtx) <- rownames(x)
return(as.matrix(new.mtx))
}
do.SVD = function(m, comp.1=1, comp.2=2){ # returns eig.cell
s <- svd(m)
ev <- s$d^2 / sum(s$d^2)
return(s$u[,c(comp.1, comp.2)])
}
project.SVD <- function(m, eig.cell){
return(t(m) %*% eig.cell)
}
plot.SVD <- function(m, comp.1=1, comp.2=2, groups=rep("blue", ncol(m)), title=""){
eig <- do.SVD(m, comp.1, comp.2)
proj <- project.SVD(m, eig)
xminv <- min(proj[,1]) # - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) # + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) # - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) # + .2 * abs(max(proj[,2]))
plot(proj,pch=20,col="white",xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab="PC1",ylab="PC2",main=title)
points(proj, col=as.character(groups),pch=20) # , #pch=c(rep(15,3),rep(17,3),rep(19,3),rep(18,3),rep(20,2)), cex=2)
textxy(proj[,1],proj[,2],labs=colnames(m))
}
loadings.SVD <- function(m, comp=1, gene.ids = rownames(m)){
s <- svd(m)
l <- s$u[,comp]
names(l) <- gene.ids
l.s <- l[order(l)]
return(l.s)
}
plot.loadings.SVD <- function(m, comp=1, cutoff=0.1, gene.ids = rownames(m)){
l <- loadings.SVD(m, comp, gene.ids)
barplot(l[abs(l)>cutoff],las=2,main=paste("PC", comp, "cutoff", cutoff),cex.names=0.6)
}
plotPC <- function(matrix,a,b,desc,colors){
eig <- do.SVD(matrix, a, b)
proj <- project.SVD(matrix, eig)
xminv <- min(proj[,1]) - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) + .2 * abs(max(proj[,2]))
plot(proj,pch=20,xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab=paste0("PC",a),ylab=paste("PC",b),col=colors,main=desc)
textxy(proj[,1],proj[,2],labs=rownames(proj))
}
library(biomaRt)
f_ids <- as.vector(f[,1])
ensembl = useMart("ensembl", dataset = "hsapiens_gene_ensembl") #select the ensembl database
gene_type <- getBM(attributes=c("ensembl_gene_id", "gene_biotype"),
filters = "ensembl_gene_id",
values=f_ids,
mart=ensembl)
pc <- subset(gene_type[,1],gene_type[,2]=="protein_coding")
f_pc <- f[match(pc,f[,1]),]
pc <- unique(subset(gene_type[,1],gene_type[,2]=="protein_coding") )
pheatmap(cor(f_pc[,3:16], method="spearman"))
pheatmap(cor(f_pc[,3:16]))
pseudo <- 1
fpkms.log <- log2(f_pc + pseudo)
pheatmap(cor(fpkms.log[,3:16]))
fpkms.log <- log2(f_pc[,] + pseudo)
fpkms.log <- log2(f_pc[,3:16] + pseudo)
pheatmap(cor(fpkms.log[,3:16]))
pseudo <- 1
fpkms.log <- log2(f_pc[,3:16] + pseudo)
pheatmap(cor(fpkms.log[,3:16]))
pheatmap(cor(fpkms.log[,]))
f.nolow <- f.pc[-which(rowMeans(f.pc[,3:16])<1),]
f.nolow <- f_pc[-which(rowMeans(f_pc[,3:16])<1),]
pheatmap(cor(log2(f.nolow+pseudo)))
f.nolow <- f_pc[-which(rowMeans(f_pc[,3:16])<1),]
pheatmap(cor(log2(f.nolow[,3:16] + pseudo)))
barplot(a$"F value"[-5],names.arg=rownames(a)[-5],main="Anova F score, Raw RPKM",ylim=c(0,maxval))
head(f_pc)
f_pc_nozero <- f_pc[-which(rowSums(f_pc[,3:16])==0),]
pheatmap(cor(f_pc_nozero[,3:16], method="spearman"))
pheatmap(cor(f_pc_nozero[,3:16]))
fpkms.log <- log2(f_pc_nozero[,3:16] + pseudo)
pheatmap(cor(fpkms.log[,]))
f.nolow <- f_pc_nozero[-which(rowMeans(f_pc_nozero[,3:16])<1),]
pheatmap(cor(log2(f.nolow[,3:16] + pseudo)))
plotPC(f_pc_nozero, 1, 2, "Reprocessed FPKM values \n SVD \n n=19524", colors=colors)
colors <- c(1,2,3,1,2,1,2,3,1,2,3)
plotPC(f_pc_nozero, 1, 2, "Reprocessed FPKM values \n SVD \n n=19524", colors=colors)
plotPC(f_pc_nozero[,3:16], 1, 2, "Reprocessed FPKM values \n SVD \n n=19524", colors=colors)
plotPC(f_pc_nozero[,3:16], 2, 3, "Reprocessed FPKM values \n SVD \n n=19524", colors=colors)
colors <- c(1,2,3,1,2,1,2,3,1,2,3)
par(mfrow=c(4,4))
for (i in 1:6){
for(j in 1:6){
if (i<j){
plotPC(f_pc_nozero,i,j,desc="",colors=colors)
}
}
}
colors <- c(1,2,3,1,2,1,2,3,1,2,3)
par(mfrow=c(4,4))
for (i in 1:6){
for(j in 1:6){
if (i<j){
plotPC(f_pc_nozero[,3:16],i,j,desc="",colors=colors)
}
}
}
plotPC(fpkms.log, 1, 2, desc="Reprocessed F/RPKM values, log2 \n SVD \n n=13333", colors=colors)
plotPC(fpkms.log, 1, 2, desc="Reprocessed F/RPKM values, log2 \n SVD \n n=13333", colors=colors)
pseudo <- 1
fpkms.log <- log2(f_pc_nozero[,3:16] + pseudo)
plotPC(fpkms.log, 1, 2, desc="Reprocessed F/RPKM values, log2 \n SVD \n n=13333", colors=colors)
plotPC(fpkms.log, 2, 3, desc="Published FPKM values, log2 \n SVD \n n=13333", colors=colors)
library(sva)
head(f_pc_nozero)
meta <- data.frame(study=c(rep("EoGE",3),rep("Atlas",3),rep("BodyMap",3),rep("HPA",3),rep("AltIso",2)),tissue=c("Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart"))
head(meta)
meta
table(meta[,2])
batch <- meta$study
design <- model.matrix(~as.factor(tissue),data=meta)
combat <- ComBat(dat=fpkms.log,batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log,batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
head(fpkms.log)
pseudo <- 1
fpkms.log <- log2(f_pc_nozero[,3:16] + pseudo)
combat <- ComBat(dat=f.log.tmm,batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=f.log.tmm,batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
meta <- data.frame(study=c(rep("EoGE",3),rep("Atlas",3),rep("BodyMap",3),rep("HPA",3),rep("AltIso",2)),tissue=c("Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart"),prep=c(rep("poly-A",3),rep("rRNA-depl",3),rep("poly-A",8)),layout=c(rep("PE",3),rep("SE",3),rep("PE",6),rep("SE",2)))
combat <- ComBat(dat=fpkms.log,batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
head(fpkms.log)
Downloading the F/RPKM data
---------------------------
Prepare by defining functions etc.
```{r prepare}
library(edgeR)
library(pheatmap)
library(gplots)
library(ops)
library(calibrate)
normalize.voom <- function(counts){
require(limma)
return(voom(counts)$E)
}
cpm.tmm <- function(counts, groups=NA){
require(edgeR)
if(is.na(groups)){
d<-DGEList(counts=counts)
}
else{
d<-DGEList(counts=counts, group=groups)
}
d <- calcNormFactors(d, method="TMM")
return(cpm(d, normalized.lib.sizes=TRUE))
}
log2.cpm <- function(x){
x.pseud <- x + 0.5
libsizes = colSums(x)
libsize.pseud <- libsizes + 1.0
new.mtx <- log2(1e6 * mapply("/",as.data.frame(x.pseud),libsize.pseud))
rownames(new.mtx) <- rownames(x)
return(as.matrix(new.mtx))
}
do.SVD = function(m, comp.1=1, comp.2=2){ # returns eig.cell
s <- svd(m)
ev <- s$d^2 / sum(s$d^2)
return(s$u[,c(comp.1, comp.2)])
}
project.SVD <- function(m, eig.cell){
return(t(m) %*% eig.cell)
}
plot.SVD <- function(m, comp.1=1, comp.2=2, groups=rep("blue", ncol(m)), title=""){
eig <- do.SVD(m, comp.1, comp.2)
proj <- project.SVD(m, eig)
xminv <- min(proj[,1]) # - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) # + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) # - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) # + .2 * abs(max(proj[,2]))
plot(proj,pch=20,col="white",xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab="PC1",ylab="PC2",main=title)
points(proj, col=as.character(groups),pch=20) # , #pch=c(rep(15,3),rep(17,3),rep(19,3),rep(18,3),rep(20,2)), cex=2)
textxy(proj[,1],proj[,2],labs=colnames(m))
}
loadings.SVD <- function(m, comp=1, gene.ids = rownames(m)){
s <- svd(m)
l <- s$u[,comp]
names(l) <- gene.ids
l.s <- l[order(l)]
return(l.s)
}
plot.loadings.SVD <- function(m, comp=1, cutoff=0.1, gene.ids = rownames(m)){
l <- loadings.SVD(m, comp, gene.ids)
barplot(l[abs(l)>cutoff],las=2,main=paste("PC", comp, "cutoff", cutoff),cex.names=0.6)
}
plotPC <- function(matrix,a,b,desc,colors){
eig <- do.SVD(matrix, a, b)
proj <- project.SVD(matrix, eig)
xminv <- min(proj[,1]) - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) + .2 * abs(max(proj[,2]))
plot(proj,pch=20,xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab=paste0("PC",a),ylab=paste("PC",b),col=colors,main=desc)
textxy(proj[,1],proj[,2],labs=rownames(proj))
}
rm(list = ls(all = TRUE))
library(pheatmap)
library(biomaRt)
library(limma)
library(edgeR)
library(sva)
f <- read.delim("/Users/fridadanielsson/Documents/Projekt/Publika_dataset/manuscript/PCA/data/published_rpkms.txt",sep=" ")
f.nozero <- f[-which(rowSums(f[,])==0),]
pheatmap(cor(f.nozero, method="spearman"))
pheatmap(cor(f.nozero))
pseudo <- 1
fpkms.log <- log2(f.nozero + pseudo)
pheatmap(cor(fpkms.log))
meta <- data.frame(study=c(rep("HPA",3),rep("AltIso",2),rep("GTex",3),rep("Atlas",3)),tissue=c("Heart","Brain","Kidney","Heart","Brain","Heart","Brain","Kidney","Heart","Brain","Kidney"))
batch <- meta$study
design <- model.matrix(~as.factor(tissue),data=meta)
fpkms.log <- log2(f.nozero + pseudo)
combat <- ComBat(dat=fpkms.log,batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
head(fpkms.log)
rm(list = ls(all = TRUE))
library(pheatmap)
library(edgeR)
library(calibrate)
f <- read.delim("fpkm_table_tophat.txt")
do.SVD = function(m, comp.1=1, comp.2=2){ # returns eig.cell
s <- svd(m)
ev <- s$d^2 / sum(s$d^2)
return(s$u[,c(comp.1, comp.2)])
}
project.SVD <- function(m, eig.cell){
return(t(m) %*% eig.cell)
}
plot.SVD <- function(m, comp.1=1, comp.2=2, groups=rep("blue", ncol(m)), title=""){
eig <- do.SVD(m, comp.1, comp.2)
proj <- project.SVD(m, eig)
xminv <- min(proj[,1]) # - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) # + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) # - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) # + .2 * abs(max(proj[,2]))
plot(proj,pch=20,col="white",xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab="PC1",ylab="PC2",main=title)
points(proj, col=as.character(groups),pch=20) # , #pch=c(rep(15,3),rep(17,3),rep(19,3),rep(18,3),rep(20,2)), cex=2)
textxy(proj[,1],proj[,2],labs=colnames(m))
}
loadings.SVD <- function(m, comp=1, gene.ids = rownames(m)){
s <- svd(m)
l <- s$u[,comp]
names(l) <- gene.ids
l.s <- l[order(l)]
return(l.s)
}
plot.loadings.SVD <- function(m, comp=1, cutoff=0.1, gene.ids = rownames(m)){
l <- loadings.SVD(m, comp, gene.ids)
barplot(l[abs(l)>cutoff],las=2,main=paste("PC", comp, "cutoff", cutoff),cex.names=0.6)
}
plotPC <- function(matrix,a,b,desc,colors){
eig <- do.SVD(matrix, a, b)
proj <- project.SVD(matrix, eig)
xminv <- min(proj[,1]) - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) + .2 * abs(max(proj[,2]))
plot(proj,pch=20,xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab=paste0("PC",a),ylab=paste("PC",b),col=colors,main=desc)
textxy(proj[,1],proj[,2],labs=rownames(proj))
}
library(biomaRt)
f_ids <- as.vector(f[,1])
ensembl = useMart("ensembl", dataset = "hsapiens_gene_ensembl") #select the ensembl database
gene_type <- getBM(attributes=c("ensembl_gene_id", "gene_biotype"),
filters = "ensembl_gene_id",
values=f_ids,
mart=ensembl)
pc <- subset(gene_type[,1],gene_type[,2]=="protein_coding")
f_pc <- f[match(pc,f[,1]),]
head(f_pc)
class(f_pc[,3])
f_pc_nozero <- f_pc[-which(rowSums(f_pc[,3:16])==0),]
head(f_pc_nozero)
pseudo <- 1
fpkms.log <- log2(f_pc_nozero[,3:16] + pseudo)
head(fpkms.log)
library(sva)
meta <- data.frame(study=c(rep("EoGE",3),rep("Atlas",3),rep("BodyMap",3),rep("HPA",3),rep("AltIso",2)),tissue=c("Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart"),prep=c(rep("poly-A",3),rep("rRNA-depl",3),rep("poly-A",8)),layout=c(rep("PE",3),rep("SE",3),rep("PE",6),rep("SE",2)))
batch <- meta$study
design <- model.matrix(~as.factor(tissue),data=meta)
combat <- ComBat(dat=fpkms.log,head(),batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log,batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:1000,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:10000,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:9000,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:8000,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:7000,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:6000,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:5000,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:4000,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:3000,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2000,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2500,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2400,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2300,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2200,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2100,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2050,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2070,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2080,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2090,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2085,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2084,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2083,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2082,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2081,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[1:2080,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
fpkms.log[2080,]
fpkms.log[2081,]
f_pc_nozero[2081,]
f_pc_nozero <- f_pc[-which(rowSums(f_pc[,3:16])<=0.01),]
f_pc_nozero <- f_pc[-which(rowSums(f_pc[,3:16])<=0.01),]
pseudo <- 1
fpkms.log <- log2(f_pc_nozero[,3:16] + pseudo)
library(sva)
meta <- data.frame(study=c(rep("EoGE",3),rep("Atlas",3),rep("BodyMap",3),rep("HPA",3),rep("AltIso",2)),tissue=c("Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart"),prep=c(rep("poly-A",3),rep("rRNA-depl",3),rep("poly-A",8)),layout=c(rep("PE",3),rep("SE",3),rep("PE",6),rep("SE",2)))
batch <- meta$study
design <- model.matrix(~as.factor(tissue),data=meta)
combat <- ComBat(dat=fpkms.log[1:2080,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
combat <- ComBat(dat=fpkms.log[,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
plotPC(combat,1,2,colors=colors,desc="Reprocessed F/RPKM values, ComBat on log2 values \n SVD \n n=19475")
head(f)
rm(list = ls(all = TRUE))
f <- read.delim("/Users/fridadanielsson/Documents/Projekt/Publika_dataset/manuscript/PCA/data/published_rpkms.txt",sep=" ")
head(f)
colors <- c(2,1,3,2,1,3,2,1,3,2,1,3,2,1)
f <- read.delim("fpkm_table_tophat.txt")
library(biomaRt)
f_ids <- as.vector(f[,1])
ensembl = useMart("ensembl", dataset = "hsapiens_gene_ensembl") #select the ensembl database
gene_type <- getBM(attributes=c("ensembl_gene_id", "gene_biotype"),
filters = "ensembl_gene_id",
values=f_ids,
mart=ensembl)
pc <- subset(gene_type[,1],gene_type[,2]=="protein_coding")
f_pc <- f[match(pc,f[,1]),]
f_pc_nozero <- f_pc[-which(rowSums(f_pc[,3:16])<=0.01),]
pheatmap(cor(f_pc_nozero[,3:16], method="spearman"))
pheatmap(cor(f_pc_nozero[,3:16]))
pseudo <- 1
fpkms.log <- log2(f_pc_nozero[,3:16] + pseudo)
pheatmap(cor(fpkms.log[,]))
f.nolow <- f_pc_nozero[-which(rowMeans(f_pc_nozero[,3:16])<1),]
pheatmap(cor(log2(f.nolow[,3:16] + pseudo)))
colors <- c(2,1,3,2,1,3,2,1,3,2,1,3,2,1)
plotPC(f_pc_nozero[,3:16], 1, 2, "Reprocessed FPKM values \n SVD \n n=19524", colors=colors)
log2.cpm <- function(x){
x.pseud <- x + 0.5
libsizes = colSums(x)
libsize.pseud <- libsizes + 1.0
new.mtx <- log2(1e6 * mapply("/",as.data.frame(x.pseud),libsize.pseud))
rownames(new.mtx) <- rownames(x)
return(as.matrix(new.mtx))
}
do.SVD = function(m, comp.1=1, comp.2=2){ # returns eig.cell
s <- svd(m)
ev <- s$d^2 / sum(s$d^2)
return(s$u[,c(comp.1, comp.2)])
}
project.SVD <- function(m, eig.cell){
return(t(m) %*% eig.cell)
}
plot.SVD <- function(m, comp.1=1, comp.2=2, groups=rep("blue", ncol(m)), title=""){
eig <- do.SVD(m, comp.1, comp.2)
proj <- project.SVD(m, eig)
xminv <- min(proj[,1]) # - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) # + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) # - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) # + .2 * abs(max(proj[,2]))
plot(proj,pch=20,col="white",xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab="PC1",ylab="PC2",main=title)
points(proj, col=as.character(groups),pch=20) # , #pch=c(rep(15,3),rep(17,3),rep(19,3),rep(18,3),rep(20,2)), cex=2)
textxy(proj[,1],proj[,2],labs=colnames(m))
}
loadings.SVD <- function(m, comp=1, gene.ids = rownames(m)){
s <- svd(m)
l <- s$u[,comp]
names(l) <- gene.ids
l.s <- l[order(l)]
return(l.s)
}
plot.loadings.SVD <- function(m, comp=1, cutoff=0.1, gene.ids = rownames(m)){
l <- loadings.SVD(m, comp, gene.ids)
barplot(l[abs(l)>cutoff],las=2,main=paste("PC", comp, "cutoff", cutoff),cex.names=0.6)
}
plotPC <- function(matrix,a,b,desc,colors){
eig <- do.SVD(matrix, a, b)
proj <- project.SVD(matrix, eig)
xminv <- min(proj[,1]) - .2 * abs(min(proj[,1]))
xmaxv <- max(proj[,1]) + .2 * abs(max(proj[,1]))
yminv <- min(proj[,2]) - .2 * abs(min(proj[,2]))
ymaxv <- max(proj[,2]) + .2 * abs(max(proj[,2]))
plot(proj,pch=20,xlim=c(xminv,xmaxv),ylim=c(yminv,ymaxv),xaxt='n',yaxt='n',xlab=paste0("PC",a),ylab=paste("PC",b),col=colors,main=desc)
textxy(proj[,1],proj[,2],labs=rownames(proj))
}
colors <- c(2,1,3,2,1,3,2,1,3,2,1,3,2,1)
plotPC(f_pc_nozero[,3:16], 1, 2, "Reprocessed FPKM values \n SVD \n n=19524", colors=colors)
plotPC(f_pc_nozero[,3:16], 2, 3, "Reprocessed FPKM values \n SVD \n n=19524", colors=colors)
plotPC(fpkms.log, 1, 2, desc="Reprocessed F/RPKM values, log2 \n SVD \n n=13333", colors=colors)
plotPC(fpkms.log, 2, 3, desc="Published FPKM values, log2 \n SVD \n n=13333", colors=colors)
library(sva)
meta <- data.frame(study=c(rep("EoGE",3),rep("Atlas",3),rep("BodyMap",3),rep("HPA",3),rep("AltIso",2)),tissue=c("Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart","Kidney","Brain","Heart"),prep=c(rep("poly-A",3),rep("rRNA-depl",3),rep("poly-A",8)),layout=c(rep("PE",3),rep("SE",3),rep("PE",6),rep("SE",2)))
batch <- meta$study
design <- model.matrix(~as.factor(tissue),data=meta)
combat <- ComBat(dat=fpkms.log[,],batch=batch,mod=design,numCovs=NULL,par.prior=TRUE)
write.table(combat, file="reprocessed_rpkms_combat_log2.txt", quote=F)
pheatmap(cor(combat))
plotPC(combat,1,2,colors=colors,desc="Reprocessed F/RPKM values, ComBat on log2 values \n SVD \n n=19475")
plotPC(combat,2,3,colors=colors,desc="Published F/RPKM values, ComBat adjusted log2 TMM values \n SVD \n n=13333")
colors <- c(2,1,3,2,1,3,2,1,3,2,1,3,2,1)
plotPC(f_pc_nozero[,3:16], 1, 2, "Reprocessed FPKM values \n SVD \n n=19524", colors=colors)
plotPC(f_pc_nozero[,3:16], 2, 3, "Reprocessed FPKM values \n SVD \n n=19524", colors=colors)
head(f_pc_nozero)
EoGE_b <- rownames(f_pc[order(f$EoGE__brain,decreasing=T),][1:100,])
EoGE_h <- rownames(f[order(f$EoGE_heart,decreasing=T),][1:100,])
EoGE_k <- rownames(f[order(f$EoGE_kidney,decreasing=T),][1:100,])
Atlas_b <- rownames(f[order(f_pc$Atlas_brain,decreasing=T),][1:100,])
Atlas_h <- rownames(f[order(f_pc$Atlas_heart,decreasing=T),][1:100,])
Atlas_k <- rownames(f[order(f_pc$Atlas_kidney,decreasing=T),][1:100,])
BodyMap_b <- rownames(f[order(f_pc$BodyMap_brain,decreasing=T),][1:100,])
BodyMap_h <- rownames(f[order(f_pc$BodyMap_heart,decreasing=T),][1:100,])
BodyMap_k <- rownames(f[order(f_pc$BodyMap_kidney,decreasing=T),][1:100,])
EoGE_b <- rownames(f_pc[order(f$EoGE_brain,decreasing=T),][1:100,])
library(VennDiagram)
EoGE_b <- rownames(f_pc[order(f_pc$EoGE_brain,decreasing=T),][1:100,])
EoGE_h <- rownames(f_pc[order(f_pc$EoGE_heart,decreasing=T),][1:100,])
EoGE_k <- rownames(f_pc[order(f_pc$EoGE_kidney,decreasing=T),][1:100,])
Atlas_b <- rownames(f_pc[order(f_pc$Atlas_brain,decreasing=T),][1:100,])
Atlas_h <- rownames(f_pc[order(f_pc$Atlas_heart,decreasing=T),][1:100,])
Atlas_k <- rownames(f_pc[order(f_pc$Atlas_kidney,decreasing=T),][1:100,])
BodyMap_b <- rownames(f_pc[order(f_pc$BodyMap_brain,decreasing=T),][1:100,])
BodyMap_h <- rownames(f_pc[order(f_pc$BodyMap_heart,decreasing=T),][1:100,])
BodyMap_k <- rownames(f_pc[order(f_pc$BodyMap_kidney,decreasing=T),][1:100,])
HPA_b <- rownames(f_pc[order(f_pc$HPA_brain,decreasing=T),][1:100,])
HPA_h <- rownames(f_pc[order(f_pc$HPA_heart,decreasing=T),][1:100,])
HPA_k <- rownames(f_pc[order(f_pc$HPA_kidney,decreasing=T),][1:100,])
AltIso_b <- rownames(f_pc[order(f_pc$AltIso_brain,decreasing=T),][1:100,])
AltIso_h <- rownames(f_pc[order(f_pc$AltIso_heart,decreasing=T),][1:100,])
f <- read.delim("/Users/fridadanielsson/Documents/Projekt/Publika_dataset/manuscript/PCA/data/published_rpkms.txt",sep=" ")
f <- read.delim("/Users/fridadanielsson/Documents/Projekt/Publika_dataset/manuscript/PCA/data/published_rpkms.txt",sep=" ")
library(edgeR)
library(pheatmap)
library(gplots)
library(ops)
library(calibrate)
library(VennDiagram)
HPA_b <- rownames(f[order(f$HPA_brain,decreasing=T),][1:100,])
HPA_h <- rownames(f[order(f$HPA_heart,decreasing=T),][1:100,])
HPA_k <- rownames(f[order(f$HPA_kidney,decreasing=T),][1:100,])
AltIso_b <- rownames(f[order(f$AltIso_brain,decreasing=T),][1:100,])
AltIso_h <- rownames(f[order(f$AltIso_heart,decreasing=T),][1:100,])
GTEx_b <- rownames(f[order(f$GTEx_brain,decreasing=T),][1:100,])
GTEx_h <- rownames(f[order(f$GTEx_heart,decreasing=T),][1:100,])
GTEx_k <- rownames(f[order(f$GTEx_kidney,decreasing=T),][1:100,])
Atlas_b <- rownames(f[order(f$Atlas_brain,decreasing=T),][1:100,])
Atlas_h <- rownames(f[order(f$Atlas_heart,decreasing=T),][1:100,])
Atlas_k <- rownames(f[order(f$Atlas_kidney,decreasing=T),][1:100,])
b_Ids <- list(HPA_b,AltIso_b,GTEx_b,Atlas_b)
draw.quad.venn(100, 100, 100, 100,
length(intersect(HPA_b,AltIso_b)),
length(intersect(HPA_b,GTEx_b)),
length(intersect(HPA_b,Atlas_b)),
length(intersect(AltIso_b,GTEx_b)),
length(intersect(AltIso_b,Atlas_b)),
length(intersect(GTEx_b,Atlas_b)),
length(intersect(intersect(HPA_b,AltIso_b),GTEx_b)),
length(intersect(intersect(HPA_b,AltIso_b),Atlas_b)),
length(intersect(intersect(HPA_b,GTEx_b),Atlas_b)),
length(intersect(intersect(AltIso_b,GTEx_b),Atlas_b)),
length(intersect(intersect(HPA_b,AltIso_b),intersect(Atlas_b,GTEx_b))),
category = c("HPA","AltIso","GTEx","Atlas"), lwd = rep(0, 4), lty = rep("solid", 4),
fill = c("mistyrose","steelblue","lightgoldenrod","darkseagreen")
)
length(intersect(EoGE_b,Atlas_b))
EoGE_b <- rownames(f_pc[order(f_pc$EoGE_brain,decreasing=T),][1:100,])
EoGE_h <- rownames(f_pc[order(f_pc$EoGE_heart,decreasing=T),][1:100,])
EoGE_k <- rownames(f_pc[order(f_pc$EoGE_kidney,decreasing=T),][1:100,])
Atlas_b <- rownames(f_pc[order(f_pc$Atlas_brain,decreasing=T),][1:100,])
Atlas_h <- rownames(f_pc[order(f_pc$Atlas_heart,decreasing=T),][1:100,])
Atlas_k <- rownames(f_pc[order(f_pc$Atlas_kidney,decreasing=T),][1:100,])
length(intersect(EoGE_b,Atlas_b))
